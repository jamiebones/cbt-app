version: "3.8"

services:
  # Frontend React Application (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - cbt-network

  # Monolithic Backend Server (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - media_data:/app/uploads
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGODB_URL=mongodb://mongo:27017/cbt_app
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - UPLOAD_PATH=/app/uploads
      - MAX_FILE_SIZE=10485760
      - MAX_IMAGE_SIZE=5242880
      - MAX_AUDIO_SIZE=10485760
    depends_on:
      - mongo
      - redis
    networks:
      - cbt-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "2.0"
          memory: 2G

  # Local Server for Offline Test Delivery (Production - same monolithic codebase)
  local-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - local_media_data:/app/uploads
      - local_app_data:/app/data
    environment:
      - NODE_ENV=local
      - PORT=5000
      - MONGODB_URL=mongodb://local-mongo:27017/cbt_local
      - REDIS_URL=redis://local-redis:6379
      - SYNC_SERVER_URL=http://backend:4000
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - UPLOAD_PATH=/app/uploads
      - MAX_FILE_SIZE=10485760
      - MAX_IMAGE_SIZE=5242880
      - MAX_AUDIO_SIZE=10485760
    depends_on:
      - local-mongo
      - local-redis
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  # MongoDB - Main Database (Production)
  mongo:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=cbt_main
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  # MongoDB - Local Database (Production)
  local-mongo:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - local_mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=cbt_local
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  # Redis - Main Cache (Production)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 256M

  # Redis - Local Cache (Production)
  local-redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - local_redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 128M

  # NGINX Load Balancer and Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - api-gateway
    networks:
      - cbt-network
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 256M

volumes:
  mongo_data:
    driver: local
  local_mongo_data:
    driver: local
  redis_data:
    driver: local
  local_redis_data:
    driver: local
  media_data:
    driver: local
  local_media_data:
    driver: local
  local_app_data:
    driver: local

networks:
  cbt-network:
    driver: bridge
